# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build test and coverage report Ubuntu 22.04 

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Dependencies
      run: sudo apt-get install clang clang-format clang-tidy gcc-10 gcovr build-essential googletest libgtest-dev libgmock-dev libspdlog-dev qtbase5-dev libqt5bluetooth5 qtconnectivity5-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory.
      run: cmake -S ${{github.workspace}}/Source -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config Debug --target all

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      run: ctest -C Debug

    - name: Clang-tidy
      uses: ZehMatt/clang-tidy-annotations@v1.0.0
      with:
        build_dir: '${{github.workspace}}/build'
        source_dir: '${{github.workspace}}/Source'
        only_affected_lines: false
        cmake_args: 'cmake --build ${{github.workspace}}/build --config Debug --target fluffy-obd-lib fluffy-obd-lib_clangtidy'

    - name: Generate Code Coverage
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      run: cmake --build ${{github.workspace}}/build --config Debug --target coverage

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: ${{github.workspace}}/build/coverage/cobertura.xml

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: build/coverage/cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: true
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md